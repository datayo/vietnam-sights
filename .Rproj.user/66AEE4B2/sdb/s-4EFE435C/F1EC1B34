{
    "contents" : "---\ntitle: \"Map Visualization with Leaflet package in R\"\nauthor: \"Brother Rain\"\ndate: \"30/03/2015\"\noutput: html_document\n---\n\n> The traveler sees what he sees, the tourist sees what he has come to see.\n\n> [Gilbert K. Chesterton](http://www.brainyquote.com/quotes/quotes/g/gilbertkc100091.html)\n\n\nThere are number of packages in R help you visualize map data such as RGoogleMaps, leafletR or rCharts. \n\nIn this post I will show you how do I collect, transform travel data from [lonelyplanet](http://www.lonelyplanet.com/vietnam/sights), and visualize map collected data using `leaflet` package.\n\n\n## Data: Collection and Transformation\n\nI use some javascript code to \"live\" crawl all information of sights in Vietnam from [lonelyplanet](http://www.lonelyplanet.com/vietnam/sights), the result contains 503 sights in Vietnam saved in `sights.json` file\n\nTo transform json data, I use `jsonlite` and [geocode service](http://maps.google.com/maps/api/geocode/) to get geo data from name of each sightseeing. For instance, with *Quang Cong Pagoda* place in *Nha Trang* , send request to service via api *http://maps.google.com/maps/api/geocode/json?address=Quang%20Cong%20Pagoda,%20Nha%20Trang* we can have the geo data of Quang Cong pagoda\n\n```{r, eval=FALSE}\nlocation: {\n  lat: 12.2387911,\n  lng: 109.1967488\n}\n\n```\n\nThis code below show how do I transform json data to csv\n\n```{r, eval=FALSE}\nGetGeoOfSights <- function(){\n  sights.raw <- readLines(\"data/sights.json\")\n  sights <- fromJSON(sights.raw)\n  sights <- sights %>% mutate(\n    fullLocation = paste(name, address, sep=\", \")\n  ) %>% mutate(\n    lat = GetLat(fullLocation),\n    lng = GetLng(fullLocation),\n    type = GetType(fullLocation)\n  )\n  write.csv(sights, file=\"data/sights.csv\")\n}\n```\n\n## Visualization\n\nNow it's fun part, we first load leaflet package\n\n```{r, eval=FALSE}\nlibrary(leaflet)\n```\n\nThen we create a first layer with `leaftlet()` function\n\n```{r, eval=FALSE}\nm = leaflet() %>% addTiles()\nsights <- sights %>% na.omit() %>% filter()\n```\n\nThe next thing to do is set a view port for map\n\n```{r, eval=FALSE}\nm = m %>%\n    setView(105.8, 15.9, zoom = 5)\n```\n\nFinally, we create `MultiPoint` geometry correspond with each sights in map\n\n```{r, eval=FALSE}\nfor(i in 1:nrow(sights)){\n  shape = list(\n    type = 'Feature',\n    properties = list(\n      popup = paste(sights[i, ]$name, sights[i, ]$address,\n                      sep=\", \") \n    ),\n    geometry = list(\n      type = 'MultiPoint',\n      coordinates = cbind(sights[i, ]$lng, sights[i, ]$lat)\n    )\n  )\n  m = m %>% addGeoJSON(shape)\n}\nprint(m)\n```\n\nand here are result \n\n![](http://i.imgur.com/gxPX9oF.png)\n\nActually, If you run this code, the map can be interactive. You can zoom in and zoom out, and a pop up will show detail informations when you click to shapes.\n\nYou can get full project here [https://github.com/rain1024/datayo/tree/master/vietnam-sights](https://github.com/rain1024/datayo/tree/master/vietnam-sights)",
    "created" : 1427893603497.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2723344664",
    "id" : "F1EC1B34",
    "lastKnownWriteTime" : 1427901629,
    "path" : "~/Works/datayo/vietnam-sights/reports/report.Rmd",
    "project_path" : "reports/report.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}